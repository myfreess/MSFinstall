「Isomorphic」(同构)

太长不看版:

两个类型的值数量相同即可粗略地认为这两个类型同构。

当然这既不严谨也不数学,而且不切实际，但是对于那些值数量有限的类型，下这样的断言只要别当成什么数学定理说出来，还是可以接受的。

简单的定义:

在同一个范畴C中存在对象x和y，如果有以下条件

f 从x到y的态射
g 从y到x的态射

满足以下条件

f . g = id_y
g . f = id_x

(用_代替下标了)

就可以说，对象x和y同构。

额，那么同构表明了什么？实际上同构是定义在态射上的一种很弱的相等关系。一对同构的对象在直觉上高度相似。

那么对于同一个对象呢? 没错，每个对象都和自己同构。

Isomorphism: https://ncatlab.org/nlab/show/isomorphism

参考文献: Reason Isomorphically! (Ralf Hinze)


#{BEGIN}

这些知识足够让我们判断两个haskell的类型是“近似”的吗？答案是完全不够用。

#{END}


