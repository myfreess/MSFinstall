长期以来，设计模式，又或者说idiom，作为弥补程序语言短板的一种重要手段非常流行。
(我不认为只有GoF那一套才能称为设计模式。)

Haskell作为一种典型的主要面向函数式编程的语言(如果非要强调那一堆模拟命令式的库和IORef，STRef，我只能说求放过。), 其特殊之处就在于它的设计模式不仅来自于长期的工程实践，还有一部分形式上不明所以的设计模式，来自所谓的范畴论。在这里，是理论引导了更好的实践。但是本文对这两方面都会涉及，对于背后的理论基础，只提供引用和简单的介绍
